# 1. Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# 2. Load the dataset
df = pd.read_csv("train.csv")

# 3. Select relevant features (simple regression: 1 feature, multiple regression: many)
# We'll use 'GrLivArea' (above ground living area) to predict 'SalePrice' (house price)
X = df[['GrLivArea']]  # simple regression
# X = df[['GrLivArea', 'TotalBsmtSF', 'GarageArea']]  # for multiple regression
y = df['SalePrice']

# 4. Split into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 5. Fit the model
model = LinearRegression()
model.fit(X_train, y_train)

# 6. Predict
y_pred = model.predict(X_test)

# 7. Evaluate model
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"MAE: {mae:.2f}")
print(f"MSE: {mse:.2f}")
print(f"RÂ² Score: {r2:.4f}")

# 8. Plot regression line (for simple regression only)
plt.figure(figsize=(8, 6))
plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.plot(X_test, y_pred, color='red', linewidth=2, label='Regression Line')
plt.xlabel("GrLivArea (sq ft)")
plt.ylabel("SalePrice ($)")
plt.title("Linear Regression: GrLivArea vs SalePrice")
plt.legend()
plt.show()

