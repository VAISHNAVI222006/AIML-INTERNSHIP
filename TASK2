# Step 1: Import Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Optional: Set seaborn style for cleaner visuals
sns.set(style='whitegrid')

# Step 2: Load Dataset
# Replace 'your_dataset.csv' with your actual file name
df = pd.read_csv('your_dataset.csv')

# Step 3: Summary Statistics
print("Data Info:")
print(df.info())
print("\nSummary Statistics:")
print(df.describe())
print("\nMissing Values:")
print(df.isnull().sum())

# Step 4: Histograms of Numeric Features
print("\nGenerating Histograms...")
df.hist(bins=20, figsize=(15, 10), edgecolor='black')
plt.suptitle("Histograms of Numeric Features")
plt.tight_layout()
plt.show()

# Step 5: Boxplots for Numeric Features
print("\nGenerating Boxplots...")
numeric_cols = df.select_dtypes(include='number').columns
plt.figure(figsize=(15, 8))
for i, col in enumerate(numeric_cols):
    plt.subplot(2, len(numeric_cols)//2 + 1, i + 1)
    sns.boxplot(y=df[col])
    plt.title(col)
plt.tight_layout()
plt.show()

# Step 6: Correlation Matrix Heatmap
print("\nGenerating Correlation Heatmap...")
plt.figure(figsize=(10, 6))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm', fmt=".2f")
plt.title("Correlation Matrix")
plt.tight_layout()
plt.show()

# Step 7: Pairplot for Feature Relationships
print("\nGenerating Pairplot...")
sns.pairplot(df[numeric_cols])
plt.suptitle("Pairplot of Numeric Features", y=1.02)
plt.show()

# Step 8: Detect Outliers (1st and 99th percentile)
print("\nOutlier Detection (beyond 1st and 99th percentile):")
for col in numeric_cols:
    lower = df[col].quantile(0.01)
    upper = df[col].quantile(0.99)
    outliers = df[(df[col] < lower) | (df[col] > upper)]
    if not outliers.empty:
        print(f"- {col} has {len(outliers)} outliers.")

# Step 9: Scatterplot Example (if applicable)
# Replace 'feature1' and 'feature2' with actual column names
# Uncomment and edit the lines below based on your dataset
# sns.scatterplot(x='feature1', y='feature2', data=df)
# plt.title("Feature1 vs Feature2")
# plt.show()
